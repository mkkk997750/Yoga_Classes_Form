{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MUKESH KUMAR SHAH\\\\Downloads\\\\assignment_flexmoney\\\\client\\\\src\\\\components\\\\Register.js\";\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import { useNavigate } from 'react-router-dom';\n// import './Register.css';\n\n// const Register = () => {\n//   const [name, setName] = useState('');\n//   const [email, setEmail] = useState('');\n//   const [password, setPassword] = useState('');\n//   const [age, setAge] = useState('');\n//   const [batch, setBatch] = useState('');\n//   const [date, setDate] = useState('');\n//   const [selectedMonth, setSelectedMonth] = useState('');\n//   const [errors, setErrors] = useState({});\n//   const [response, setResponse] = useState(null);\n\n//   const history = useNavigate();\n\n//   const handleSubmit = (e) => {\n//     e.preventDefault();\n//     setErrors({});\n\n//     let isValid = true;\n//     if (!name) {\n//       setErrors((prev) => ({ ...prev, name: 'Please enter your name' }));\n//       isValid = false;\n//     }\n//     if (!email) {\n//       setErrors((prev) => ({ ...prev, email: 'Please enter your email' }));\n//       isValid = false;\n//     }\n//     if (!password) {\n//       setErrors((prev) => ({ ...prev, password: 'Please enter your password' }));\n//       isValid = false;\n//     }\n//     if (!age) {\n//       setErrors((prev) => ({ ...prev, age: 'Please enter your age' }));\n//       isValid = false;\n//     } else if (age < 18 || age > 65) {\n//       setErrors((prev) => ({ ...prev, age: 'Age limit is 18-65' }));\n//       isValid = false;\n//     }\n//     if (!batch) {\n//       setErrors((prev) => ({ ...prev, batch: 'Please select a batch' }));\n//       isValid = false;\n//     }\n//     if (!date) {\n//       setErrors((prev) => ({ ...prev, date: 'Please enter your date' }));\n//       isValid = false;\n//     }\n//     if (!selectedMonth) {\n//       setErrors((prev) => ({ ...prev, month: 'Please select a month' }));\n//       isValid = false;\n//     } else if (parseInt(selectedMonth, 10) < 1 || parseInt(selectedMonth, 10) > 12) {\n//       setErrors((prev) => ({ ...prev, month: 'Month should be between 1 and 12' }));\n//       isValid = false;\n//     }\n\n//     if (isValid) {\n//       axios\n//         .post('/api/register', { name, email, password, age, batch, date, month: selectedMonth })\n//         .then((res) => {\n//           setResponse(res.data);\n//         })\n//         .catch((err) => {\n//           setErrors(err.response.data);\n//         });\n//     }\n//   };\n\n//   useEffect(() => {\n//     if (response) {\n//       localStorage.setItem('token', response.token);\n//       localStorage.setItem('user', JSON.stringify(response.user));\n//       history('/');\n//     }\n//   }, [response, history]);\n\n//   return (\n//     <div className=\"register\">\n//       <h2>Register</h2>\n//       <form onSubmit={handleSubmit}>\n//         <div className=\"form-group\">\n//           <label htmlFor=\"name\">Name</label>\n//           <input\n//             type=\"text\"\n//             id=\"name\"\n//             value={name}\n//             onChange={(e) => setName(e.target.value)}\n//           />\n//           {errors.name && <span className=\"error\">{errors.name}</span>}\n//         </div>\n//         <div className=\"form-group\">\n//           <label htmlFor=\"email\">Email</label>\n//           <input\n//             type=\"email\"\n//             id=\"email\"\n//             value={email}\n//             onChange={(e) => setEmail(e.target.value)}\n//           />\n//           {errors.email && <span className=\"error\">{errors.email}</span>}\n//         </div>\n//         <div className=\"form-group\">\n//           <label htmlFor=\"password\">Password</label>\n//           <input\n//             type=\"password\"\n//             id=\"password\"\n//             value={password}\n//             onChange={(e) => setPassword(e.target.value)}\n//           />\n//           {errors.password && <span className=\"error\">{errors.password}</span>}\n//         </div>\n//         <div className=\"form-group\">\n//           <label htmlFor=\"age\">Age</label>\n//           <input\n//             type=\"number\"\n//             id=\"age\"\n//             value={age}\n//             onChange={(e) => setAge(e.target.value)}\n//           />\n//           {errors.age && <span className=\"error\">{errors.age}</span>}\n//         </div>\n//         <div className=\"form-group\">\n//           <label htmlFor=\"batch\">Batch</label>\n//           <select\n//             id=\"batch\"\n//             value={batch}\n//             onChange={(e) => setBatch(e.target.value)}\n//           >\n//             <option value=\"\">Select a batch</option>\n//             <option value=\"6-7AM\">6-7AM</option>\n//             <option value=\"7-8AM\">7-8AM</option>\n//             <option value=\"8-9AM\">8-9AM</option>\n//             <option value=\"5-6PM\">5-6PM</option>\n//           </select>\n//           {errors.batch && <span className=\"error\">{errors.batch}</span>}\n//         </div>\n//         <div className=\"form-group\">\n//           <label htmlFor=\"date\">Date</label>\n//           <input\n//             type=\"text\"\n//             id=\"date\"\n//             value={date}\n//             onChange={(e) => setDate(e.target.value)}\n//           />\n//           {errors.date && <span className=\"error\">{errors.date}</span>}\n//         </div>\n//         <div className=\"form-group\">\n//           <label htmlFor=\"month\">Month</label>\n//           <input\n//             type=\"text\"\n//             id=\"month\"\n//             value={selectedMonth}\n//             onChange={(e) => setSelectedMonth(e.target.value)}\n//           />\n//           {errors.month && <span className=\"error\">{errors.month}</span>}\n//         </div>\n//         <div className=\"form-group\">\n//           <button type=\"submit\">Register</button>\n//         </div>\n//       </form>\n//     </div>\n//   );\n// };\n\n// export default Register;\n\n// components/Register.js: This is the React component for the registration form\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nconst Register = () => {\n  // Define the state variables for the user input and validation\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [age, setAge] = useState('');\n  const [batch, setBatch] = useState('');\n  const [errors, setErrors] = useState({});\n\n  // Define the state variable for the API response\n  const [response, setResponse] = useState(null);\n\n  // Get the history object from React Router\n  const history = useHistory();\n\n  // Define a function to handle the form submission\n  const handleSubmit = e => {\n    // Prevent the default browser behavior\n    e.preventDefault();\n\n    // Clear any previous errors\n    setErrors({});\n\n    // Validate the user input\n    let isValid = true;\n    if (!name) {\n      setErrors(prev => ({\n        ...prev,\n        name: 'Please enter your name'\n      }));\n      isValid = false;\n    }\n    if (!email) {\n      setErrors(prev => ({\n        ...prev,\n        email: 'Please enter your email'\n      }));\n      isValid = false;\n    }\n    if (!password) {\n      setErrors(prev => ({\n        ...prev,\n        password: 'Please enter your password'\n      }));\n      isValid = false;\n    }\n    if (!age) {\n      setErrors(prev => ({\n        ...prev,\n        age: 'Please enter your age'\n      }));\n      isValid = false;\n    } else if (age < 18 || age > 65) {\n      setErrors(prev => ({\n        ...prev,\n        age: 'Age limit is 18-65'\n      }));\n      isValid = false;\n    }\n    if (!batch) {\n      setErrors(prev => ({\n        ...prev,\n        batch: 'Please select a batch'\n      }));\n      isValid = false;\n    }\n\n    // If the input is valid, make the API request\n    if (isValid) {\n      axios.post('/api/register', {\n        name,\n        email,\n        password,\n        age,\n        batch\n      }).then(res => {\n        // Set the response state\n        setResponse(res.data);\n      }).catch(err => {\n        // Set the error state\n        setErrors(err.response.data);\n      });\n    }\n  };\n\n  // Use the useEffect hook to handle the API response\n  useEffect(() => {\n    // If the response is successful, store the user's token and data in the local storage\n    if (response) {\n      localStorage.setItem('token', response.token);\n      localStorage.setItem('user', JSON.stringify(response.user));\n\n      // Redirect to the home page\n      history.push('/');\n    }\n  }, [response, history]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"register\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 7\n    }\n  }, \"Register\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 11\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"name\",\n    value: name,\n    onChange: e => setName(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 11\n    }\n  }), errors.name && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 27\n    }\n  }, errors.name)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 11\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"email\",\n    id: \"email\",\n    value: email,\n    onChange: e => setEmail(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 11\n    }\n  }), errors.email && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 28\n    }\n  }, errors.email)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 11\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    id: \"password\",\n    value: password,\n    onChange: e => setPassword(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 11\n    }\n  }), errors.password && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 31\n    }\n  }, errors.password)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"age\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 11\n    }\n  }, \"Age\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    id: \"age\",\n    value: age,\n    onChange: e => setAge(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 11\n    }\n  }), errors.age && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 26\n    }\n  }, errors.age)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"batch\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 11\n    }\n  }, \"Batch\"), /*#__PURE__*/React.createElement(\"select\", {\n    id: \"batch\",\n    value: batch,\n    onChange: e => setBatch(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 13\n    }\n  }, \"Select a batch\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"6-7AM\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 13\n    }\n  }, \"6-7AM\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"7-8AM\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 13\n    }\n  }, \"7-8AM\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"8-9AM\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 13\n    }\n  }, \"8-9AM\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"5-6PM\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 13\n    }\n  }, \"5-6PM\")), errors.batch && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 28\n    }\n  }, errors.batch)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 11\n    }\n  }, \"Register\"))));\n};\nexport default Register;","map":{"version":3,"names":["React","useState","useEffect","axios","useNavigate","Register","name","setName","email","setEmail","password","setPassword","age","setAge","batch","setBatch","errors","setErrors","response","setResponse","history","useHistory","handleSubmit","e","preventDefault","isValid","prev","post","then","res","data","catch","err","localStorage","setItem","token","JSON","stringify","user","push","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","value","onChange","target"],"sources":["C:/Users/MUKESH KUMAR SHAH/Downloads/assignment_flexmoney/client/src/components/Register.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n// import axios from 'axios';\r\n// import { useNavigate } from 'react-router-dom';\r\n// import './Register.css';\r\n\r\n// const Register = () => {\r\n//   const [name, setName] = useState('');\r\n//   const [email, setEmail] = useState('');\r\n//   const [password, setPassword] = useState('');\r\n//   const [age, setAge] = useState('');\r\n//   const [batch, setBatch] = useState('');\r\n//   const [date, setDate] = useState('');\r\n//   const [selectedMonth, setSelectedMonth] = useState('');\r\n//   const [errors, setErrors] = useState({});\r\n//   const [response, setResponse] = useState(null);\r\n\r\n//   const history = useNavigate();\r\n\r\n//   const handleSubmit = (e) => {\r\n//     e.preventDefault();\r\n//     setErrors({});\r\n\r\n//     let isValid = true;\r\n//     if (!name) {\r\n//       setErrors((prev) => ({ ...prev, name: 'Please enter your name' }));\r\n//       isValid = false;\r\n//     }\r\n//     if (!email) {\r\n//       setErrors((prev) => ({ ...prev, email: 'Please enter your email' }));\r\n//       isValid = false;\r\n//     }\r\n//     if (!password) {\r\n//       setErrors((prev) => ({ ...prev, password: 'Please enter your password' }));\r\n//       isValid = false;\r\n//     }\r\n//     if (!age) {\r\n//       setErrors((prev) => ({ ...prev, age: 'Please enter your age' }));\r\n//       isValid = false;\r\n//     } else if (age < 18 || age > 65) {\r\n//       setErrors((prev) => ({ ...prev, age: 'Age limit is 18-65' }));\r\n//       isValid = false;\r\n//     }\r\n//     if (!batch) {\r\n//       setErrors((prev) => ({ ...prev, batch: 'Please select a batch' }));\r\n//       isValid = false;\r\n//     }\r\n//     if (!date) {\r\n//       setErrors((prev) => ({ ...prev, date: 'Please enter your date' }));\r\n//       isValid = false;\r\n//     }\r\n//     if (!selectedMonth) {\r\n//       setErrors((prev) => ({ ...prev, month: 'Please select a month' }));\r\n//       isValid = false;\r\n//     } else if (parseInt(selectedMonth, 10) < 1 || parseInt(selectedMonth, 10) > 12) {\r\n//       setErrors((prev) => ({ ...prev, month: 'Month should be between 1 and 12' }));\r\n//       isValid = false;\r\n//     }\r\n\r\n//     if (isValid) {\r\n//       axios\r\n//         .post('/api/register', { name, email, password, age, batch, date, month: selectedMonth })\r\n//         .then((res) => {\r\n//           setResponse(res.data);\r\n//         })\r\n//         .catch((err) => {\r\n//           setErrors(err.response.data);\r\n//         });\r\n//     }\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     if (response) {\r\n//       localStorage.setItem('token', response.token);\r\n//       localStorage.setItem('user', JSON.stringify(response.user));\r\n//       history('/');\r\n//     }\r\n//   }, [response, history]);\r\n\r\n//   return (\r\n//     <div className=\"register\">\r\n//       <h2>Register</h2>\r\n//       <form onSubmit={handleSubmit}>\r\n//         <div className=\"form-group\">\r\n//           <label htmlFor=\"name\">Name</label>\r\n//           <input\r\n//             type=\"text\"\r\n//             id=\"name\"\r\n//             value={name}\r\n//             onChange={(e) => setName(e.target.value)}\r\n//           />\r\n//           {errors.name && <span className=\"error\">{errors.name}</span>}\r\n//         </div>\r\n//         <div className=\"form-group\">\r\n//           <label htmlFor=\"email\">Email</label>\r\n//           <input\r\n//             type=\"email\"\r\n//             id=\"email\"\r\n//             value={email}\r\n//             onChange={(e) => setEmail(e.target.value)}\r\n//           />\r\n//           {errors.email && <span className=\"error\">{errors.email}</span>}\r\n//         </div>\r\n//         <div className=\"form-group\">\r\n//           <label htmlFor=\"password\">Password</label>\r\n//           <input\r\n//             type=\"password\"\r\n//             id=\"password\"\r\n//             value={password}\r\n//             onChange={(e) => setPassword(e.target.value)}\r\n//           />\r\n//           {errors.password && <span className=\"error\">{errors.password}</span>}\r\n//         </div>\r\n//         <div className=\"form-group\">\r\n//           <label htmlFor=\"age\">Age</label>\r\n//           <input\r\n//             type=\"number\"\r\n//             id=\"age\"\r\n//             value={age}\r\n//             onChange={(e) => setAge(e.target.value)}\r\n//           />\r\n//           {errors.age && <span className=\"error\">{errors.age}</span>}\r\n//         </div>\r\n//         <div className=\"form-group\">\r\n//           <label htmlFor=\"batch\">Batch</label>\r\n//           <select\r\n//             id=\"batch\"\r\n//             value={batch}\r\n//             onChange={(e) => setBatch(e.target.value)}\r\n//           >\r\n//             <option value=\"\">Select a batch</option>\r\n//             <option value=\"6-7AM\">6-7AM</option>\r\n//             <option value=\"7-8AM\">7-8AM</option>\r\n//             <option value=\"8-9AM\">8-9AM</option>\r\n//             <option value=\"5-6PM\">5-6PM</option>\r\n//           </select>\r\n//           {errors.batch && <span className=\"error\">{errors.batch}</span>}\r\n//         </div>\r\n//         <div className=\"form-group\">\r\n//           <label htmlFor=\"date\">Date</label>\r\n//           <input\r\n//             type=\"text\"\r\n//             id=\"date\"\r\n//             value={date}\r\n//             onChange={(e) => setDate(e.target.value)}\r\n//           />\r\n//           {errors.date && <span className=\"error\">{errors.date}</span>}\r\n//         </div>\r\n//         <div className=\"form-group\">\r\n//           <label htmlFor=\"month\">Month</label>\r\n//           <input\r\n//             type=\"text\"\r\n//             id=\"month\"\r\n//             value={selectedMonth}\r\n//             onChange={(e) => setSelectedMonth(e.target.value)}\r\n//           />\r\n//           {errors.month && <span className=\"error\">{errors.month}</span>}\r\n//         </div>\r\n//         <div className=\"form-group\">\r\n//           <button type=\"submit\">Register</button>\r\n//         </div>\r\n//       </form>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Register;\r\n\r\n// components/Register.js: This is the React component for the registration form\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst Register = () => {\r\n  // Define the state variables for the user input and validation\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [age, setAge] = useState('');\r\n  const [batch, setBatch] = useState('');\r\n  const [errors, setErrors] = useState({});\r\n\r\n  // Define the state variable for the API response\r\n  const [response, setResponse] = useState(null);\r\n\r\n  // Get the history object from React Router\r\n  const history = useHistory();\r\n\r\n  // Define a function to handle the form submission\r\n  const handleSubmit = (e) => {\r\n    // Prevent the default browser behavior\r\n    e.preventDefault();\r\n\r\n    // Clear any previous errors\r\n    setErrors({});\r\n\r\n    // Validate the user input\r\n    let isValid = true;\r\n    if (!name) {\r\n      setErrors((prev) => ({ ...prev, name: 'Please enter your name' }));\r\n      isValid = false;\r\n    }\r\n    if (!email) {\r\n      setErrors((prev) => ({ ...prev, email: 'Please enter your email' }));\r\n      isValid = false;\r\n    }\r\n    if (!password) {\r\n      setErrors((prev) => ({ ...prev, password: 'Please enter your password' }));\r\n      isValid = false;\r\n    }\r\n    if (!age) {\r\n      setErrors((prev) => ({ ...prev, age: 'Please enter your age' }));\r\n      isValid = false;\r\n    } else if (age < 18 || age > 65) {\r\n      setErrors((prev) => ({ ...prev, age: 'Age limit is 18-65' }));\r\n      isValid = false;\r\n    }\r\n    if (!batch) {\r\n      setErrors((prev) => ({ ...prev, batch: 'Please select a batch' }));\r\n      isValid = false;\r\n    }\r\n\r\n    // If the input is valid, make the API request\r\n    if (isValid) {\r\n      axios\r\n        .post('/api/register', { name, email, password, age, batch })\r\n        .then((res) => {\r\n          // Set the response state\r\n          setResponse(res.data);\r\n        })\r\n        .catch((err) => {\r\n          // Set the error state\r\n          setErrors(err.response.data);\r\n        });\r\n    }\r\n  };\r\n\r\n  // Use the useEffect hook to handle the API response\r\n  useEffect(() => {\r\n    // If the response is successful, store the user's token and data in the local storage\r\n    if (response) {\r\n      localStorage.setItem('token', response.token);\r\n      localStorage.setItem('user', JSON.stringify(response.user));\r\n\r\n      // Redirect to the home page\r\n      history.push('/');\r\n    }\r\n  }, [response, history]);\r\n\r\n  return (\r\n    <div className=\"register\">\r\n      <h2>Register</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"name\">Name</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"name\"\r\n            value={name}\r\n            onChange={(e) => setName(e.target.value)}\r\n          />\r\n          {errors.name && <span className=\"error\">{errors.name}</span>}\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"email\">Email</label>\r\n          <input\r\n            type=\"email\"\r\n            id=\"email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          />\r\n          {errors.email && <span className=\"error\">{errors.email}</span>}\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"password\">Password</label>\r\n          <input\r\n            type=\"password\"\r\n            id=\"password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n          {errors.password && <span className=\"error\">{errors.password}</span>}\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"age\">Age</label>\r\n          <input\r\n            type=\"number\"\r\n            id=\"age\"\r\n            value={age}\r\n            onChange={(e) => setAge(e.target.value)}\r\n          />\r\n          {errors.age && <span className=\"error\">{errors.age}</span>}\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"batch\">Batch</label>\r\n          <select\r\n            id=\"batch\"\r\n            value={batch}\r\n            onChange={(e) => setBatch(e.target.value)}\r\n          >\r\n            <option value=\"\">Select a batch</option>\r\n            <option value=\"6-7AM\">6-7AM</option>\r\n            <option value=\"7-8AM\">7-8AM</option>\r\n            <option value=\"8-9AM\">8-9AM</option>\r\n            <option value=\"5-6PM\">5-6PM</option>\r\n          </select>\r\n          {errors.batch && <span className=\"error\">{errors.batch}</span>}\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <button type=\"submit\">Register</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;"],"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"},"metadata":{},"sourceType":"module"}