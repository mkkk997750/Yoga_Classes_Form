{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MUKESH KUMAR SHAH\\\\Downloads\\\\assignment_flexmoney\\\\client\\\\src\\\\App.js\";\n// App.js or your route configuration file\n// import React from 'react';\n// import { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\n// import Home from './components/Home';\n// import Login from './components/Login';\n// import Register from './components/Register';\n// import Navbar from './components/Navbar';\n// import Payment from './components/Payment';\n\n// function App() {\n//   return (\n//     <Router>\n//       <Navbar />\n//       <Routes>\n//         <Route path=\"/\" element={<Home />} />\n//         <Route path=\"/login\" element={<Login />} />\n//         <Route path=\"/register\" element={<Register />} />\n//         <Route path=\"/pay\" element={<Payment />} />\n//       </Routes>\n//     </Router>\n//   );\n// }\n\n// export default App;\n\n// App.js\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Form from './components/Form';\nimport Confirmation from './components/Confirmation';\nimport Success from './components/Success';\nfunction App() {\n  // Use state hooks to store the user data and the payment status\n  const [userData, setUserData] = useState({});\n  const [paymentStatus, setPaymentStatus] = useState('');\n\n  // Define a function to handle the form submission\n  const handleFormSubmit = data => {\n    // Make a post request to the enroll route with the user data\n    axios.post('http://localhost:3001/api/enroll', data).then(response => {\n      // Enrollment successful, set the user data state\n      setUserData(data);\n    }).catch(error => {\n      // Enrollment failed, display an error message\n      alert(error.response.data.message);\n    });\n  };\n\n  // Define a function to handle the payment confirmation\n  const handlePaymentConfirm = data => {\n    // Make a post request to the payment route with the payment details\n    axios.post(`http://localhost:3001/api/payment/${userData.email}`, data).then(response => {\n      // Payment successful, set the payment status state\n      setPaymentStatus('success');\n    }).catch(error => {\n      // Payment failed, set the payment status state\n      setPaymentStatus('failure');\n    });\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, \"Yoga Classes Enrollment\"), /*#__PURE__*/React.createElement(BrowserRouter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleFormSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Route, {\n    path: \"/confirmation\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Confirmation, {\n    userData: userData,\n    onConfirm: handlePaymentConfirm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Route, {\n    path: \"/success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Success, {\n    paymentStatus: paymentStatus,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  })))));\n}\nexport default App;","map":{"version":3,"names":["React","useState","axios","BrowserRouter","Switch","Route","Form","Confirmation","Success","App","userData","setUserData","paymentStatus","setPaymentStatus","handleFormSubmit","data","post","then","response","catch","error","alert","message","handlePaymentConfirm","email","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","exact","path","onSubmit","onConfirm"],"sources":["C:/Users/MUKESH KUMAR SHAH/Downloads/assignment_flexmoney/client/src/App.js"],"sourcesContent":["// App.js or your route configuration file\n// import React from 'react';\n// import { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\n// import Home from './components/Home';\n// import Login from './components/Login';\n// import Register from './components/Register';\n// import Navbar from './components/Navbar';\n// import Payment from './components/Payment';\n\n// function App() {\n//   return (\n//     <Router>\n//       <Navbar />\n//       <Routes>\n//         <Route path=\"/\" element={<Home />} />\n//         <Route path=\"/login\" element={<Login />} />\n//         <Route path=\"/register\" element={<Register />} />\n//         <Route path=\"/pay\" element={<Payment />} />\n//       </Routes>\n//     </Router>\n//   );\n// }\n\n// export default App;\n\n// App.js\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Form from './components/Form';\nimport Confirmation from './components/Confirmation';\nimport Success from './components/Success';\n\nfunction App() {\n  // Use state hooks to store the user data and the payment status\n  const [userData, setUserData] = useState({});\n  const [paymentStatus, setPaymentStatus] = useState('');\n\n  // Define a function to handle the form submission\n  const handleFormSubmit = (data) => {\n    // Make a post request to the enroll route with the user data\n    axios\n      .post('http://localhost:3001/api/enroll', data)\n      .then((response) => {\n        // Enrollment successful, set the user data state\n        setUserData(data);\n      })\n      .catch((error) => {\n        // Enrollment failed, display an error message\n        alert(error.response.data.message);\n      });\n  };\n\n  // Define a function to handle the payment confirmation\n  const handlePaymentConfirm = (data) => {\n    // Make a post request to the payment route with the payment details\n    axios\n      .post(`http://localhost:3001/api/payment/${userData.email}`, data)\n      .then((response) => {\n        // Payment successful, set the payment status state\n        setPaymentStatus('success');\n      })\n      .catch((error) => {\n        // Payment failed, set the payment status state\n        setPaymentStatus('failure');\n      });\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Yoga Classes Enrollment</h1>\n      <BrowserRouter>\n        <Switch>\n          {/* Route for the form component */}\n          <Route exact path=\"/\">\n            <Form onSubmit={handleFormSubmit} />\n          </Route>\n          {/* Route for the confirmation component */}\n          <Route path=\"/confirmation\">\n            <Confirmation userData={userData} onConfirm={handlePaymentConfirm} />\n          </Route>\n          {/* Route for the success component */}\n          <Route path=\"/success\">\n            <Success paymentStatus={paymentStatus} />\n          </Route>\n        </Switch>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}